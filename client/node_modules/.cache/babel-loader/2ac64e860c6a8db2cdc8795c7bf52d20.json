{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["E:/Website Coding/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEID,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACZ,uBAAuB,CAACW,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIF,QAAQ,CAACX,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIP;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,SAAS,CACXK,eAAe,CAACe,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}